== README

This project is a demonstration project for the ACL, intended to demonstrate my facility with Rails and data architecture.  It is a mock-up comments system for courses from the National University of Singapore's Computing Term Project Showcase:

http://wing.comp.nus.edu.sg/socProjectShowcase/2012_2013_Sem1/abstracts.html

=== USERS

The system recognizes two kinds of user: administrators and students.  Users are identified by email.  The seed data will create exactly one administrator with email mail1@mail.com.  This user can be used to add new users or promote other users to administrator.  

=== PROJECTS

Users are associated with projects.  Projects have a title, and abstract, and are in turn associated with a Course.  Both users and administrators can create projects and add other users to projects with which they are associated.  Only administrators can arbitrarily add people to projects.  Student users can remove themselves from projects.  Administrators can remove anyone from a project.  Projects cannot be destroyed until there is only one associated user remaining.  They may then be destroyed by that user, or by an administrator.

=== COURSES

Projects are associated with courses.  Courses may have many projects, but projects are associated with only one course.  The course is specified at creation and can be changed later.

=== EVALUATIONS

Projects have associated evaluations left by users.  Users may rate and comment on projects.  Each user may leave only one evaluation per project.  If a user attempts to leave a new evaluation, he will instead be given the opportunity to edit his existing evaluation.

=== SESSIONS and PERMISSIONS

Login and signup are handled through a SessionController.  There is no associated model.  This is because Session information is not saved to the database.  The SessionController merely sets session variables.  Permissions are handled through a Permissions model for which there is no associated controller.  This is because Permissions handles business logic, but permissions cannot be modified by end users.

=== ROLES

Users have roles which manage how their permissions work.  There are currently only roles for administrator and student.  This class was generated by scaffolding, so there are ways to create new roles built into the system.  This is not by design and should be removed.  TODO: replace Role with a model which has no associated controllers or views along the lines of the Permission model.

== DEMONSTRATION

This project is available for demonstration on 

http://pythonpartisan.com

but it will be removed shortly.

== SETUP

* Ruby version - 2.0.0-p0 using rbenv
* Rails version - 4.0.0-beta1
* Middleware - Phusion Passenger
* Server - Apache 2.2.22
* Dependencies - bcrypt-ruby for the authentication system and therubyracer for Passenger's asset caching, if you are using Passenger

The project comes with seed data, and is currently configured to run with sqlite.  Database creation and seeding follows the standard rake pattern:

<tt>
bundle install
rake db:create:all
RAILS_ENV=production rake:db:migrate
RAILS_ENV=production rake:db:seed
</tt>

== TESTING AND DOCUMENTATION

Incomplete.  The test suite and rdoc-ready comments consist only of what was provided by Rails scaffolding.  TODO: comment all classes for documentation generation.
